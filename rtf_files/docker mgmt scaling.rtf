{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red5\green68\blue254;}
{\*\expandedcolortbl;;\cssrgb\c0\c38136\c99824;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17300\viewh10480\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\f1\b docker container scaling\

\f0\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf2 Scaling the App
\f0\b0 \cf0  \
\
Create new app 
\f1\b docker-scaling\

\f0\b0  \
	Define 3 ports between 8080 to 8082\
\

\f1\b 	ports:\
	 - \'938080-8082:8080\'94
\f0\b0 \
\
docker-compose up --scale 
\f1\b docker-scaling-service
\f0\b0 =2\
\

\f1\b 	docker ps
\f0\b0 \
\
	2 instances of 
\f1\b container
\f0\b0  running at 8080 & 8081\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
	can access by URLs\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	http://localhost:
\f1\b 8080
\f0\b0 /test/show\
	http://localhost:
\f1\b 8081
\f0\b0 /test/show\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf2 Scaling a Software - MongoDb
\f0\b0 \cf0  \
\
start 2 instances \
	Make sure enough ports defined docker compose file. Define 3 ports between 27017 to 27019  \
\

\f1\b 	ports:\
	 - "27017-27019:27017"
\f0\b0 \
\
docker-compose up --scale mongo-service=2\
\

\f1\b 	docker ps
\f0\b0 \
\
	2 instances of "mongo-service" started\
\
}